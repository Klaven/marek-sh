<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Posts on Marek</title>
		<link>https://www.marek.sh/posts/</link>
		<description>Recent content in Posts on Marek</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>en-us</language>
		<lastBuildDate>Mon, 26 Nov 2018 00:00:00 +0000</lastBuildDate>
		<atom:link href="https://www.marek.sh/posts/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>Mini Cluster</title>
			<link>https://www.marek.sh/posts/mini-cluster/</link>
			<pubDate>Mon, 26 Nov 2018 00:00:00 +0000</pubDate>
			
			<guid>https://www.marek.sh/posts/mini-cluster/</guid>
			<description>So I have been working on kubernetes as of late and decided that if I was going to call myself a real kubernetes expert I should be running one in my home around the clock. I will write posts following these miss adventures, as I am sure I&amp;rsquo;ll do a lot of stupid things that you all can ether learn from, or use to make ones self feel better about themselves :).</description>
			<content type="html"><![CDATA[<p>So I have been working on kubernetes as of late and decided that if I was going to call myself a real kubernetes expert I should be running one in my home around the clock. I will write posts following these miss adventures, as I am sure I&rsquo;ll do a lot of stupid things that you all can ether learn from, or use to make ones self feel better about themselves :).</p>

<p>I have made some design choices already. First it is going to be ARM powered as most of the time I have run it on xeon processors or some other x86 processor. I figured the best learning experiences where the ones where I know the least. Another consideration that helped me pick ARM was the fact that mostly I will just want to run light workloads and so the less energy I use the better.</p>

<p>I thought about getting just a single x64 machines and run the master and worker node on it, but felt like that was really not that awesome and does not often replicate the issues found in the real world.</p>

<p>For my MVP I have decided that I will forgo storage considerations, while it should not be too hard to setup, I don&rsquo;t want to worry about trying to figure out what I want to do for that right now. Nor do I want to buy it. I have been watching the Rook project and think that it would be interesting to do something with that.</p>

<p>That being said I have the hardware in the mail, 2 RockPro64 and 1 2gb Pine64 from Pine64. Why the one Pine vs 3 Rocks? I already owned it and it enabled me to be a little cheaper in purchasing the hardware. :) that is all. I plan on in the future switching it out, or adding a new RockPro when needed. the beauty of a k8s cluster.</p>

<p>I also ordered eMMC cards for the RockPros as the Rocks are going to be the master nodes. (I know, someone is itching to say I will only start with three nodes) I was thinking at first I would just run a one node master with two workers, OR a three master three worker setup with my workload running on the master nodes :/ But what I do know, I can only afford 3 right now :)</p>

<p>In the future, if I need more, I can always add more nodes.</p>

<p>Anyhow, I will write my next post when I get to setting up the hardware :)</p>

<p>Marek</p>
]]></content>
		</item>
		
		<item>
			<title>Setting Up Hugo</title>
			<link>https://www.marek.sh/posts/setting-up-hugo/</link>
			<pubDate>Wed, 01 Aug 2018 00:00:00 +0000</pubDate>
			
			<guid>https://www.marek.sh/posts/setting-up-hugo/</guid>
			<description>Setting Up Hugo So, My first blog post will be about setting up the blog. I know, I know&amp;hellip; I could just set up a word press site, but what is the fun in that. Not only is this more fun. but it should be easier for me to manage.
Why Hugo? Because it&amp;rsquo;s written in go, compiles quickly (nice while on the go with minimum resources) and lets me edit on the fly.</description>
			<content type="html"><![CDATA[

<h1 id="setting-up-hugo">Setting Up Hugo</h1>

<p>So, My first blog post will be about setting up the blog. I know, I know&hellip; I could just set up a word press site, but what is the fun in that. Not only is this more fun. but it should be easier for me to manage.</p>

<h2 id="why-hugo">Why Hugo?</h2>

<p>Because it&rsquo;s written in go, compiles quickly (nice while on the go with minimum resources) and lets me edit on the fly. I also liked how they do templates and the likes. Are there other solutions? yes. Do other solutions work well? probably.</p>

<p><a href="https://gohugo.io/getting-started/installing">installing hugo</a> is quick and simple. and the <a href="https://themes.gohugo.io/">themes</a> are fantastic. For the base I&rsquo;m starting off with <a href="https://themes.gohugo.io/hugo-theme-sam/">Call me Sam.</a> because I liked its simplicity. I will probably update it&rsquo;s main at some point. (aka updating all typeface to use <a href="https://sourcefoundry.org/hack/">Hack</a>)</p>

<p>For this post I&rsquo;m going to keep it simple. but will try to hit all the high points.</p>

<h2 id="netlify">Netlify</h2>

<p>Netlify let me deploy and host &ldquo;simply and quickly&rdquo;. now&hellip; there are some gocha&rsquo;s in this. First, to get the theme working properly you need follow these <a href="https://gohugo.io/hosting-and-deployment/hosting-on-netlify/#use-hugo-themes-with-netlify">steps</a>. Other then that and ensuring that your config.toml is set up to refer to the <code>https</code> site.</p>

<pre><code> baseurl                 = &quot;https://www.marek.sh/&quot;
</code></pre>

<p>on top of this you need to ensure that you have the setting to enforce <code>https</code> set in Netlify settings.</p>

<p>While you are at it you should donate too <a href="https://letsencrypt.org/donate/">letsencrypt.org</a> as they will give  you a free certificate.</p>

<p>After setting up netlify not only will you have an awesome static site, but each time you push to your master branch it will auto deploy!</p>

<h2 id="conclusion">Conclusion</h2>

<p>While I did not go into too many details because most of the above is covered in a lot of places.</p>

<p>Netlify was super simple to use and setup, It took about 4 buttons to deploy out of the github account and while there was a little confusion about the enforcement of <code>https</code> in the end, was very simple.</p>
]]></content>
		</item>
		
	</channel>
</rss>
